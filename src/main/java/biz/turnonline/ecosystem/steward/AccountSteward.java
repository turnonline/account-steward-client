/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2018-10-08 17:45:39 UTC)
 * on 2019-06-10 at 09:32:00 UTC
 * Modify at your own risk.
 */

package biz.turnonline.ecosystem.steward;

/**
 * Service definition for AccountSteward (v1).
 *
 * <p>
 * TurnOnline.biz Ecosystem: Account  Contact management REST API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.turnonline.biz/docs/account.turnon.cloud/1" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AccountStewardRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @author Google, Inc.
 * @since 1.3
 */
@SuppressWarnings( "javadoc" )
public class AccountSteward
        extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient
{

    /**
     * The default encoded root URL of the service. This is determined when the library is generated
     * and normally should not be changed.
     *
     * @since 1.7
     */
    public static final String DEFAULT_ROOT_URL = "https://account-steward-dot-turn-online-eu.appspot.com/api/";

    /**
     * The default encoded service path of the service. This is determined when the library is
     * generated and normally should not be changed.
     *
     * @since 1.7
     */
    public static final String DEFAULT_SERVICE_PATH = "steward/v1/";

    /**
     * The default encoded batch path of the service. This is determined when the library is
     * generated and normally should not be changed.
     *
     * @since 1.23
     */
    public static final String DEFAULT_BATCH_PATH = "batch";

    /**
     * The default encoded base URL of the service. This is determined when the library is generated
     * and normally should not be changed.
     */
    public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

    // Note: Leave this static initializer at the top of the file.
    static
    {
        com.google.api.client.util.Preconditions.checkState(
                com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
                        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
                "You are currently running with version %s of google-api-client. " +
                        "You need at least version 1.15 of google-api-client to run version " +
                        "1.25.0 of the TurnOnline.biz Account &amp; Contact management library.", com.google.api.client.googleapis.GoogleUtils.VERSION );
    }

    /**
     * Constructor.
     *
     * <p>
     * Use {@link Builder} if you need to specify any of the optional parameters.
     * </p>
     *
     * @param transport              HTTP transport, which should normally be:
     *                               <ul>
     *                               <li>Google App Engine:
     *                               {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *                               <li>Android: {@code newCompatibleTransport} from
     *                               {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *                               <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *                               </li>
     *                               </ul>
     * @param jsonFactory            JSON factory, which may be:
     *                               <ul>
     *                               <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *                               <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *                               <li>Android Honeycomb or higher:
     *                               {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *                               </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public AccountSteward( com.google.api.client.http.HttpTransport transport,
                           com.google.api.client.json.JsonFactory jsonFactory,
                           com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
    {
        this( new Builder( transport, jsonFactory, httpRequestInitializer ) );
    }

    /**
     * @param builder builder
     */
    AccountSteward( Builder builder )
    {
        super( builder );
    }

    @Override
    protected void initialize( com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest )
            throws java.io.IOException
    {
        super.initialize( httpClientRequest );
    }

    /**
     * An accessor for creating requests from the Accounts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountSteward steward = new AccountSteward(...);}
     *   {@code AccountSteward.Accounts.List request = steward.accounts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Accounts accounts()
    {
        return new Accounts();
    }

    /**
     * An accessor for creating requests from the Contacts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountSteward steward = new AccountSteward(...);}
     *   {@code AccountSteward.Contacts.List request = steward.contacts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Contacts contacts()
    {
        return new Contacts();
    }

    /**
     * An accessor for creating requests from the Countries collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountSteward steward = new AccountSteward(...);}
     *   {@code AccountSteward.Countries.List request = steward.countries().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Countries countries()
    {
        return new Countries();
    }

    /**
     * An accessor for creating requests from the Domains collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountSteward steward = new AccountSteward(...);}
     *   {@code AccountSteward.Domains.List request = steward.domains().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Domains domains()
    {
        return new Domains();
    }

    /**
     * An accessor for creating requests from the Legalforms collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountSteward steward = new AccountSteward(...);}
     *   {@code AccountSteward.Legalforms.List request = steward.legalforms().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Legalforms legalforms()
    {
        return new Legalforms();
    }

    /**
     * Builder for {@link AccountSteward}.
     *
     * <p>
     * Implementation is not thread-safe.
     * </p>
     *
     * @since 1.3.0
     */
    public static final class Builder
            extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder
    {

        /**
         * Returns an instance of a new builder.
         *
         * @param transport              HTTP transport, which should normally be:
         *                               <ul>
         *                               <li>Google App Engine:
         *                               {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
         *                               <li>Android: {@code newCompatibleTransport} from
         *                               {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
         *                               <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
         *                               </li>
         *                               </ul>
         * @param jsonFactory            JSON factory, which may be:
         *                               <ul>
         *                               <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
         *                               <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
         *                               <li>Android Honeycomb or higher:
         *                               {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
         *                               </ul>
         * @param httpRequestInitializer HTTP request initializer or {@code null} for none
         * @since 1.7
         */
        public Builder( com.google.api.client.http.HttpTransport transport,
                        com.google.api.client.json.JsonFactory jsonFactory,
                        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
        {
            super(
                    transport,
                    jsonFactory,
                    DEFAULT_ROOT_URL,
                    DEFAULT_SERVICE_PATH,
                    httpRequestInitializer,
                    false );
            setBatchPath( DEFAULT_BATCH_PATH );
        }

        /**
         * Builds a new instance of {@link AccountSteward}.
         */
        @Override
        public AccountSteward build()
        {
            return new AccountSteward( this );
        }

        @Override
        public Builder setRootUrl( String rootUrl )
        {
            return ( Builder ) super.setRootUrl( rootUrl );
        }

        @Override
        public Builder setServicePath( String servicePath )
        {
            return ( Builder ) super.setServicePath( servicePath );
        }

        @Override
        public Builder setBatchPath( String batchPath )
        {
            return ( Builder ) super.setBatchPath( batchPath );
        }

        @Override
        public Builder setHttpRequestInitializer( com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
        {
            return ( Builder ) super.setHttpRequestInitializer( httpRequestInitializer );
        }

        @Override
        public Builder setApplicationName( String applicationName )
        {
            return ( Builder ) super.setApplicationName( applicationName );
        }

        @Override
        public Builder setSuppressPatternChecks( boolean suppressPatternChecks )
        {
            return ( Builder ) super.setSuppressPatternChecks( suppressPatternChecks );
        }

        @Override
        public Builder setSuppressRequiredParameterChecks( boolean suppressRequiredParameterChecks )
        {
            return ( Builder ) super.setSuppressRequiredParameterChecks( suppressRequiredParameterChecks );
        }

        @Override
        public Builder setSuppressAllChecks( boolean suppressAllChecks )
        {
            return ( Builder ) super.setSuppressAllChecks( suppressAllChecks );
        }

        /**
         * Set the {@link AccountStewardRequestInitializer}.
         *
         * @since 1.12
         */
        public Builder setAccountStewardRequestInitializer(
                AccountStewardRequestInitializer accountstewardRequestInitializer )
        {
            return ( Builder ) super.setGoogleClientRequestInitializer( accountstewardRequestInitializer );
        }

        @Override
        public Builder setGoogleClientRequestInitializer(
                com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer )
        {
            return ( Builder ) super.setGoogleClientRequestInitializer( googleClientRequestInitializer );
        }
    }

    /**
     * The "accounts" collection of methods.
     */
    public class Accounts
    {

        /**
         * Create a request for the method "accounts.delete".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @return the request
         */
        public Delete delete( java.lang.String loginId ) throws java.io.IOException
        {
            Delete result = new Delete( loginId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.get".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @return the request
         */
        public Get get( java.lang.String loginId ) throws java.io.IOException
        {
            Get result = new Get( loginId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.insert".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param content the {@link biz.turnonline.ecosystem.steward.model.Account}
         * @return the request
         */
        public Insert insert( biz.turnonline.ecosystem.steward.model.Account content ) throws java.io.IOException
        {
            Insert result = new Insert( content );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.list".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @return the request
         */
        public List list() throws java.io.IOException
        {
            List result = new List();
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.update".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param content the {@link biz.turnonline.ecosystem.steward.model.Account}
         * @return the request
         */
        public Update update( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.Account content )
                throws java.io.IOException
        {
            Update result = new Update( loginId, content );
            initialize( result );
            return result;
        }

        /**
         * An accessor for creating requests from the Invoicing collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code AccountSteward steward = new AccountSteward(...);}
         *   {@code AccountSteward.Invoicing.List request = steward.invoicing().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Invoicing invoicing()
        {
            return new Invoicing();
        }

        /**
         * An accessor for creating requests from the Sub collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code AccountSteward steward = new AccountSteward(...);}
         *   {@code AccountSteward.Sub.List request = steward.sub().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Sub sub()
        {
            return new Sub();
        }

        public class Delete
                extends AccountStewardRequest<Void>
        {

            private static final String REST_PATH = "accounts/{login_id}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            /**
             * Create a request for the method "accounts.delete".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @since 1.13
             */
            protected Delete( java.lang.String loginId )
            {
                super( AccountSteward.this, "DELETE", REST_PATH, null, Void.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Delete setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Account>
        {

            private static final String REST_PATH = "accounts/{login_id}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            /**
             * Create a request for the method "accounts.get".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @since 1.13
             */
            protected Get( java.lang.String loginId )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.Account.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Get setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class Insert
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Account>
        {

            private static final String REST_PATH = "accounts";

            /**
             * Create a request for the method "accounts.insert".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
             * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param content the {@link biz.turnonline.ecosystem.steward.model.Account}
             * @since 1.13
             */
            protected Insert( biz.turnonline.ecosystem.steward.model.Account content )
            {
                super( AccountSteward.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.steward.model.Account.class );
            }

            @Override
            public Insert setAlt( java.lang.String alt )
            {
                return ( Insert ) super.setAlt( alt );
            }

            @Override
            public Insert setFields( java.lang.String fields )
            {
                return ( Insert ) super.setFields( fields );
            }

            @Override
            public Insert setKey( java.lang.String key )
            {
                return ( Insert ) super.setKey( key );
            }

            @Override
            public Insert setOauthToken( java.lang.String oauthToken )
            {
                return ( Insert ) super.setOauthToken( oauthToken );
            }

            @Override
            public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Insert ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Insert setQuotaUser( java.lang.String quotaUser )
            {
                return ( Insert ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Insert setUserIp( java.lang.String userIp )
            {
                return ( Insert ) super.setUserIp( userIp );
            }

            @Override
            public Insert set( String parameterName, Object value )
            {
                return ( Insert ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.AccountCollection>
        {

            private static final String REST_PATH = "accounts";

            @com.google.api.client.util.Key
            private java.lang.Boolean company;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "accounts.list".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @since 1.13
             */
            protected List()
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.AccountCollection.class );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.Boolean getCompany()
            {
                return company;
            }

            public List setCompany( java.lang.Boolean company )
            {
                this.company = company;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

        public class Update
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Account>
        {

            private static final String REST_PATH = "accounts/{login_id}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            /**
             * Create a request for the method "accounts.update".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param content the {@link biz.turnonline.ecosystem.steward.model.Account}
             * @since 1.13
             */
            protected Update( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.Account content )
            {
                super( AccountSteward.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.steward.model.Account.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public Update setAlt( java.lang.String alt )
            {
                return ( Update ) super.setAlt( alt );
            }

            @Override
            public Update setFields( java.lang.String fields )
            {
                return ( Update ) super.setFields( fields );
            }

            @Override
            public Update setKey( java.lang.String key )
            {
                return ( Update ) super.setKey( key );
            }

            @Override
            public Update setOauthToken( java.lang.String oauthToken )
            {
                return ( Update ) super.setOauthToken( oauthToken );
            }

            @Override
            public Update setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Update ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Update setQuotaUser( java.lang.String quotaUser )
            {
                return ( Update ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Update setUserIp( java.lang.String userIp )
            {
                return ( Update ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Update setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            @Override
            public Update set( String parameterName, Object value )
            {
                return ( Update ) super.set( parameterName, value );
            }
        }

        /**
         * The "invoicing" collection of methods.
         */
        public class Invoicing
        {

            /**
             * Create a request for the method "invoicing.delete".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @return the request
             */
            public Delete delete( java.lang.String loginId ) throws java.io.IOException
            {
                Delete result = new Delete( loginId );
                initialize( result );
                return result;
            }

            /**
             * Create a request for the method "invoicing.get".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @return the request
             */
            public Get get( java.lang.String loginId ) throws java.io.IOException
            {
                Get result = new Get( loginId );
                initialize( result );
                return result;
            }

            /**
             * Create a request for the method "invoicing.update".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param content the {@link biz.turnonline.ecosystem.steward.model.InvoicingConfig}
             * @return the request
             */
            public Update update( java.lang.String loginId,
                                  biz.turnonline.ecosystem.steward.model.InvoicingConfig content )
                    throws java.io.IOException
            {
                Update result = new Update( loginId, content );
                initialize( result );
                return result;
            }

            public class Delete
                    extends AccountStewardRequest<Void>
            {

                private static final String REST_PATH = "accounts/{login_id}/invoicing";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                /**
                 * Create a request for the method "invoicing.delete".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @since 1.13
                 */
                protected Delete( java.lang.String loginId )
                {
                    super( AccountSteward.this, "DELETE", REST_PATH, null, Void.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                }

                @Override
                public Delete setAlt( java.lang.String alt )
                {
                    return ( Delete ) super.setAlt( alt );
                }

                @Override
                public Delete setFields( java.lang.String fields )
                {
                    return ( Delete ) super.setFields( fields );
                }

                @Override
                public Delete setKey( java.lang.String key )
                {
                    return ( Delete ) super.setKey( key );
                }

                @Override
                public Delete setOauthToken( java.lang.String oauthToken )
                {
                    return ( Delete ) super.setOauthToken( oauthToken );
                }

                @Override
                public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Delete ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Delete setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Delete ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Delete setUserIp( java.lang.String userIp )
                {
                    return ( Delete ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Delete setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                @Override
                public Delete set( String parameterName, Object value )
                {
                    return ( Delete ) super.set( parameterName, value );
                }
            }

            public class Get
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.InvoicingConfig>
            {

                private static final String REST_PATH = "accounts/{login_id}/invoicing";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                /**
                 * Create a request for the method "invoicing.get".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
                 * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @since 1.13
                 */
                protected Get( java.lang.String loginId )
                {
                    super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.InvoicingConfig.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
                {
                    return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
                {
                    return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get setAlt( java.lang.String alt )
                {
                    return ( Get ) super.setAlt( alt );
                }

                @Override
                public Get setFields( java.lang.String fields )
                {
                    return ( Get ) super.setFields( fields );
                }

                @Override
                public Get setKey( java.lang.String key )
                {
                    return ( Get ) super.setKey( key );
                }

                @Override
                public Get setOauthToken( java.lang.String oauthToken )
                {
                    return ( Get ) super.setOauthToken( oauthToken );
                }

                @Override
                public Get setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Get ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Get setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Get ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Get setUserIp( java.lang.String userIp )
                {
                    return ( Get ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Get setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                @Override
                public Get set( String parameterName, Object value )
                {
                    return ( Get ) super.set( parameterName, value );
                }
            }

            public class Update
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.InvoicingConfig>
            {

                private static final String REST_PATH = "accounts/{login_id}/invoicing";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                /**
                 * Create a request for the method "invoicing.update".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
                 * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param content the {@link biz.turnonline.ecosystem.steward.model.InvoicingConfig}
                 * @since 1.13
                 */
                protected Update( java.lang.String loginId,
                                  biz.turnonline.ecosystem.steward.model.InvoicingConfig content )
                {
                    super( AccountSteward.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.steward.model.InvoicingConfig.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                }

                @Override
                public Update setAlt( java.lang.String alt )
                {
                    return ( Update ) super.setAlt( alt );
                }

                @Override
                public Update setFields( java.lang.String fields )
                {
                    return ( Update ) super.setFields( fields );
                }

                @Override
                public Update setKey( java.lang.String key )
                {
                    return ( Update ) super.setKey( key );
                }

                @Override
                public Update setOauthToken( java.lang.String oauthToken )
                {
                    return ( Update ) super.setOauthToken( oauthToken );
                }

                @Override
                public Update setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Update ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Update setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Update ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Update setUserIp( java.lang.String userIp )
                {
                    return ( Update ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Update setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                @Override
                public Update set( String parameterName, Object value )
                {
                    return ( Update ) super.set( parameterName, value );
                }
            }

        }

        /**
         * The "sub" collection of methods.
         */
        public class Sub
        {

            /**
             * Create a request for the method "sub.delete".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param subEmail
             * @return the request
             */
            public Delete delete( java.lang.String loginId, java.lang.String subEmail ) throws java.io.IOException
            {
                Delete result = new Delete( loginId, subEmail );
                initialize( result );
                return result;
            }

            /**
             * Create a request for the method "sub.get".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param subEmail
             * @return the request
             */
            public Get get( java.lang.String loginId, java.lang.String subEmail ) throws java.io.IOException
            {
                Get result = new Get( loginId, subEmail );
                initialize( result );
                return result;
            }

            /**
             * Create a request for the method "sub.insert".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param content the {@link biz.turnonline.ecosystem.steward.model.SubAccount}
             * @return the request
             */
            public Insert insert( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.SubAccount content )
                    throws java.io.IOException
            {
                Insert result = new Insert( loginId, content );
                initialize( result );
                return result;
            }

            /**
             * Create a request for the method "sub.list".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @return the request
             */
            public List list( java.lang.String loginId ) throws java.io.IOException
            {
                List result = new List( loginId );
                initialize( result );
                return result;
            }

            /**
             * Create a request for the method "sub.update".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param subEmail
             * @param content  the {@link biz.turnonline.ecosystem.steward.model.SubAccount}
             * @return the request
             */
            public Update update( java.lang.String loginId,
                                  java.lang.String subEmail,
                                  biz.turnonline.ecosystem.steward.model.SubAccount content ) throws java.io.IOException
            {
                Update result = new Update( loginId, subEmail, content );
                initialize( result );
                return result;
            }

            public class Delete
                    extends AccountStewardRequest<Void>
            {

                private static final String REST_PATH = "accounts/{login_id}/subs/{sub_email}";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                @com.google.api.client.util.Key( "sub_email" )
                private java.lang.String subEmail;

                /**
                 * Create a request for the method "sub.delete".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
                 * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param subEmail
                 * @since 1.13
                 */
                protected Delete( java.lang.String loginId, java.lang.String subEmail )
                {
                    super( AccountSteward.this, "DELETE", REST_PATH, null, Void.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                    this.subEmail = com.google.api.client.util.Preconditions.checkNotNull( subEmail, "Required parameter subEmail must be specified." );
                }

                @Override
                public Delete setAlt( java.lang.String alt )
                {
                    return ( Delete ) super.setAlt( alt );
                }

                @Override
                public Delete setFields( java.lang.String fields )
                {
                    return ( Delete ) super.setFields( fields );
                }

                @Override
                public Delete setKey( java.lang.String key )
                {
                    return ( Delete ) super.setKey( key );
                }

                @Override
                public Delete setOauthToken( java.lang.String oauthToken )
                {
                    return ( Delete ) super.setOauthToken( oauthToken );
                }

                @Override
                public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Delete ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Delete setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Delete ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Delete setUserIp( java.lang.String userIp )
                {
                    return ( Delete ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Delete setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.String getSubEmail()
                {
                    return subEmail;
                }

                public Delete setSubEmail( java.lang.String subEmail )
                {
                    this.subEmail = subEmail;
                    return this;
                }

                @Override
                public Delete set( String parameterName, Object value )
                {
                    return ( Delete ) super.set( parameterName, value );
                }
            }

            public class Get
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.SubAccount>
            {

                private static final String REST_PATH = "accounts/{login_id}/subs/{sub_email}";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                @com.google.api.client.util.Key( "sub_email" )
                private java.lang.String subEmail;

                /**
                 * Create a request for the method "sub.get".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
                 * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param subEmail
                 * @since 1.13
                 */
                protected Get( java.lang.String loginId, java.lang.String subEmail )
                {
                    super( AccountSteward.this, "POST", REST_PATH, null, biz.turnonline.ecosystem.steward.model.SubAccount.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                    this.subEmail = com.google.api.client.util.Preconditions.checkNotNull( subEmail, "Required parameter subEmail must be specified." );
                }

                @Override
                public Get setAlt( java.lang.String alt )
                {
                    return ( Get ) super.setAlt( alt );
                }

                @Override
                public Get setFields( java.lang.String fields )
                {
                    return ( Get ) super.setFields( fields );
                }

                @Override
                public Get setKey( java.lang.String key )
                {
                    return ( Get ) super.setKey( key );
                }

                @Override
                public Get setOauthToken( java.lang.String oauthToken )
                {
                    return ( Get ) super.setOauthToken( oauthToken );
                }

                @Override
                public Get setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Get ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Get setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Get ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Get setUserIp( java.lang.String userIp )
                {
                    return ( Get ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Get setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.String getSubEmail()
                {
                    return subEmail;
                }

                public Get setSubEmail( java.lang.String subEmail )
                {
                    this.subEmail = subEmail;
                    return this;
                }

                @Override
                public Get set( String parameterName, Object value )
                {
                    return ( Get ) super.set( parameterName, value );
                }
            }

            public class Insert
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Account>
            {

                private static final String REST_PATH = "accounts/{login_id}/subs";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                /**
                 * Create a request for the method "sub.insert".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
                 * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param content the {@link biz.turnonline.ecosystem.steward.model.SubAccount}
                 * @since 1.13
                 */
                protected Insert( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.SubAccount content )
                {
                    super( AccountSteward.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.steward.model.Account.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                }

                @Override
                public Insert setAlt( java.lang.String alt )
                {
                    return ( Insert ) super.setAlt( alt );
                }

                @Override
                public Insert setFields( java.lang.String fields )
                {
                    return ( Insert ) super.setFields( fields );
                }

                @Override
                public Insert setKey( java.lang.String key )
                {
                    return ( Insert ) super.setKey( key );
                }

                @Override
                public Insert setOauthToken( java.lang.String oauthToken )
                {
                    return ( Insert ) super.setOauthToken( oauthToken );
                }

                @Override
                public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Insert ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Insert setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Insert ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Insert setUserIp( java.lang.String userIp )
                {
                    return ( Insert ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Insert setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                @Override
                public Insert set( String parameterName, Object value )
                {
                    return ( Insert ) super.set( parameterName, value );
                }
            }

            public class List
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.SubAccountCollection>
            {

                private static final String REST_PATH = "accounts/{login_id}/subs";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                @com.google.api.client.util.Key
                private java.lang.Integer limit;

                @com.google.api.client.util.Key
                private java.lang.Integer offset;

                /**
                 * Create a request for the method "sub.list".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
                 * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @since 1.13
                 */
                protected List( java.lang.String loginId )
                {
                    super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.SubAccountCollection.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
                {
                    return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
                {
                    return super.buildHttpRequestUsingHead();
                }

                @Override
                public List setAlt( java.lang.String alt )
                {
                    return ( List ) super.setAlt( alt );
                }

                @Override
                public List setFields( java.lang.String fields )
                {
                    return ( List ) super.setFields( fields );
                }

                @Override
                public List setKey( java.lang.String key )
                {
                    return ( List ) super.setKey( key );
                }

                @Override
                public List setOauthToken( java.lang.String oauthToken )
                {
                    return ( List ) super.setOauthToken( oauthToken );
                }

                @Override
                public List setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( List ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public List setQuotaUser( java.lang.String quotaUser )
                {
                    return ( List ) super.setQuotaUser( quotaUser );
                }

                @Override
                public List setUserIp( java.lang.String userIp )
                {
                    return ( List ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public List setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.Integer getLimit()
                {
                    return limit;
                }

                public List setLimit( java.lang.Integer limit )
                {
                    this.limit = limit;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.Integer getOffset()
                {
                    return offset;
                }

                public List setOffset( java.lang.Integer offset )
                {
                    this.offset = offset;
                    return this;
                }

                @Override
                public List set( String parameterName, Object value )
                {
                    return ( List ) super.set( parameterName, value );
                }
            }

            public class Update
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Account>
            {

                private static final String REST_PATH = "accounts/{login_id}/subs/{sub_email}";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                @com.google.api.client.util.Key( "sub_email" )
                private java.lang.String subEmail;

                /**
                 * Create a request for the method "sub.update".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
                 * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param subEmail
                 * @param content  the {@link biz.turnonline.ecosystem.steward.model.SubAccount}
                 * @since 1.13
                 */
                protected Update( java.lang.String loginId,
                                  java.lang.String subEmail,
                                  biz.turnonline.ecosystem.steward.model.SubAccount content )
                {
                    super( AccountSteward.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.steward.model.Account.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                    this.subEmail = com.google.api.client.util.Preconditions.checkNotNull( subEmail, "Required parameter subEmail must be specified." );
                }

                @Override
                public Update setAlt( java.lang.String alt )
                {
                    return ( Update ) super.setAlt( alt );
                }

                @Override
                public Update setFields( java.lang.String fields )
                {
                    return ( Update ) super.setFields( fields );
                }

                @Override
                public Update setKey( java.lang.String key )
                {
                    return ( Update ) super.setKey( key );
                }

                @Override
                public Update setOauthToken( java.lang.String oauthToken )
                {
                    return ( Update ) super.setOauthToken( oauthToken );
                }

                @Override
                public Update setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Update ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Update setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Update ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Update setUserIp( java.lang.String userIp )
                {
                    return ( Update ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Update setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.String getSubEmail()
                {
                    return subEmail;
                }

                public Update setSubEmail( java.lang.String subEmail )
                {
                    this.subEmail = subEmail;
                    return this;
                }

                @Override
                public Update set( String parameterName, Object value )
                {
                    return ( Update ) super.set( parameterName, value );
                }
            }

        }
    }

    /**
     * The "contacts" collection of methods.
     */
    public class Contacts
    {

        /**
         * Create a request for the method "contacts.delete".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param contactId
         * @return the request
         */
        public Delete delete( java.lang.String loginId, java.lang.String contactId ) throws java.io.IOException
        {
            Delete result = new Delete( loginId, contactId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.get".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param contactId
         * @return the request
         */
        public Get get( java.lang.String loginId, java.lang.String contactId ) throws java.io.IOException
        {
            Get result = new Get( loginId, contactId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.insert".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param content the {@link biz.turnonline.ecosystem.steward.model.ContactCard}
         * @return the request
         */
        public Insert insert( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.ContactCard content )
                throws java.io.IOException
        {
            Insert result = new Insert( loginId, content );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.list".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @return the request
         */
        public List list( java.lang.String loginId ) throws java.io.IOException
        {
            List result = new List( loginId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.update".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param contactId
         * @param content   the {@link biz.turnonline.ecosystem.steward.model.ContactCard}
         * @return the request
         */
        public Update update( java.lang.String loginId,
                              java.lang.String contactId,
                              biz.turnonline.ecosystem.steward.model.ContactCard content ) throws java.io.IOException
        {
            Update result = new Update( loginId, contactId, content );
            initialize( result );
            return result;
        }

        /**
         * An accessor for creating requests from the Newsletter collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code AccountSteward steward = new AccountSteward(...);}
         *   {@code AccountSteward.Newsletter.List request = steward.newsletter().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Newsletter newsletter()
        {
            return new Newsletter();
        }

        public class Delete
                extends AccountStewardRequest<Void>
        {

            private static final String REST_PATH = "accounts/{login_id}/contacts/{contact_id}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key( "contact_id" )
            private java.lang.String contactId;

            /**
             * Create a request for the method "contacts.delete".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param contactId
             * @since 1.13
             */
            protected Delete( java.lang.String loginId, java.lang.String contactId )
            {
                super( AccountSteward.this, "DELETE", REST_PATH, null, Void.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Delete setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.String getContactId()
            {
                return contactId;
            }

            public Delete setContactId( java.lang.String contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.ContactCard>
        {

            private static final String REST_PATH = "accounts/{login_id}/contacts/{contact_id}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key( "contact_id" )
            private java.lang.String contactId;

            /**
             * Create a request for the method "contacts.get".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param contactId
             * @since 1.13
             */
            protected Get( java.lang.String loginId, java.lang.String contactId )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.ContactCard.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Get setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.String getContactId()
            {
                return contactId;
            }

            public Get setContactId( java.lang.String contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class Insert
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.ContactCard>
        {

            private static final String REST_PATH = "accounts/{login_id}/contacts";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            /**
             * Create a request for the method "contacts.insert".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
             * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param content the {@link biz.turnonline.ecosystem.steward.model.ContactCard}
             * @since 1.13
             */
            protected Insert( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.ContactCard content )
            {
                super( AccountSteward.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.steward.model.ContactCard.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public Insert setAlt( java.lang.String alt )
            {
                return ( Insert ) super.setAlt( alt );
            }

            @Override
            public Insert setFields( java.lang.String fields )
            {
                return ( Insert ) super.setFields( fields );
            }

            @Override
            public Insert setKey( java.lang.String key )
            {
                return ( Insert ) super.setKey( key );
            }

            @Override
            public Insert setOauthToken( java.lang.String oauthToken )
            {
                return ( Insert ) super.setOauthToken( oauthToken );
            }

            @Override
            public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Insert ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Insert setQuotaUser( java.lang.String quotaUser )
            {
                return ( Insert ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Insert setUserIp( java.lang.String userIp )
            {
                return ( Insert ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Insert setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            @Override
            public Insert set( String parameterName, Object value )
            {
                return ( Insert ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.ContactCardCollection>
        {

            private static final String REST_PATH = "accounts/{login_id}/contacts";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key
            private java.lang.Boolean company;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "contacts.list".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @since 1.13
             */
            protected List( java.lang.String loginId )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.ContactCardCollection.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public List setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.Boolean getCompany()
            {
                return company;
            }

            public List setCompany( java.lang.Boolean company )
            {
                this.company = company;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

        public class Update
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.ContactCard>
        {

            private static final String REST_PATH = "accounts/{login_id}/contacts/{contact_id}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key( "contact_id" )
            private java.lang.String contactId;

            /**
             * Create a request for the method "contacts.update".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param contactId
             * @param content   the {@link biz.turnonline.ecosystem.steward.model.ContactCard}
             * @since 1.13
             */
            protected Update( java.lang.String loginId,
                              java.lang.String contactId,
                              biz.turnonline.ecosystem.steward.model.ContactCard content )
            {
                super( AccountSteward.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.steward.model.ContactCard.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public Update setAlt( java.lang.String alt )
            {
                return ( Update ) super.setAlt( alt );
            }

            @Override
            public Update setFields( java.lang.String fields )
            {
                return ( Update ) super.setFields( fields );
            }

            @Override
            public Update setKey( java.lang.String key )
            {
                return ( Update ) super.setKey( key );
            }

            @Override
            public Update setOauthToken( java.lang.String oauthToken )
            {
                return ( Update ) super.setOauthToken( oauthToken );
            }

            @Override
            public Update setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Update ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Update setQuotaUser( java.lang.String quotaUser )
            {
                return ( Update ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Update setUserIp( java.lang.String userIp )
            {
                return ( Update ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Update setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.String getContactId()
            {
                return contactId;
            }

            public Update setContactId( java.lang.String contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Update set( String parameterName, Object value )
            {
                return ( Update ) super.set( parameterName, value );
            }
        }

        /**
         * The "newsletter" collection of methods.
         */
        public class Newsletter
        {

            /**
             * Create a request for the method "newsletter.update".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param contactId
             * @param content   the {@link biz.turnonline.ecosystem.steward.model.NewsletterSubscription}
             * @return the request
             */
            public Update update( java.lang.String loginId,
                                  java.lang.String contactId,
                                  biz.turnonline.ecosystem.steward.model.NewsletterSubscription content )
                    throws java.io.IOException
            {
                Update result = new Update( loginId, contactId, content );
                initialize( result );
                return result;
            }

            public class Update
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.NewsletterResponse>
            {

                private static final String REST_PATH = "accounts/{login_id}/contacts/{contact_id}/newsletter";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                @com.google.api.client.util.Key( "contact_id" )
                private java.lang.String contactId;

                /**
                 * Create a request for the method "newsletter.update".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
                 * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param contactId
                 * @param content   the {@link biz.turnonline.ecosystem.steward.model.NewsletterSubscription}
                 * @since 1.13
                 */
                protected Update( java.lang.String loginId,
                                  java.lang.String contactId,
                                  biz.turnonline.ecosystem.steward.model.NewsletterSubscription content )
                {
                    super( AccountSteward.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.steward.model.NewsletterResponse.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                    this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
                }

                @Override
                public Update setAlt( java.lang.String alt )
                {
                    return ( Update ) super.setAlt( alt );
                }

                @Override
                public Update setFields( java.lang.String fields )
                {
                    return ( Update ) super.setFields( fields );
                }

                @Override
                public Update setKey( java.lang.String key )
                {
                    return ( Update ) super.setKey( key );
                }

                @Override
                public Update setOauthToken( java.lang.String oauthToken )
                {
                    return ( Update ) super.setOauthToken( oauthToken );
                }

                @Override
                public Update setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Update ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Update setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Update ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Update setUserIp( java.lang.String userIp )
                {
                    return ( Update ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Update setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.String getContactId()
                {
                    return contactId;
                }

                public Update setContactId( java.lang.String contactId )
                {
                    this.contactId = contactId;
                    return this;
                }

                @Override
                public Update set( String parameterName, Object value )
                {
                    return ( Update ) super.set( parameterName, value );
                }
            }

        }
    }

    /**
     * The "countries" collection of methods.
     */
    public class Countries
    {

        /**
         * Create a request for the method "countries.get".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param code
         * @return the request
         */
        public Get get( java.lang.String code ) throws java.io.IOException
        {
            Get result = new Get( code );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "countries.list".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @return the request
         */
        public List list() throws java.io.IOException
        {
            List result = new List();
            initialize( result );
            return result;
        }

        public class Get
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Country>
        {

            private static final String REST_PATH = "codebook/countries/{code}";

            @com.google.api.client.util.Key
            private java.lang.String code;

            @com.google.api.client.util.Key
            private java.lang.String version;

            /**
             * Create a request for the method "countries.get".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param code
             * @since 1.13
             */
            protected Get( java.lang.String code )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.Country.class );
                this.code = com.google.api.client.util.Preconditions.checkNotNull( code, "Required parameter code must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getCode()
            {
                return code;
            }

            public Get setCode( java.lang.String code )
            {
                this.code = code;
                return this;
            }

            /**
             *
             */
            public java.lang.String getVersion()
            {
                return version;
            }

            public Get setVersion( java.lang.String version )
            {
                this.version = version;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.CountryCollection>
        {

            private static final String REST_PATH = "codebook/countries";

            @com.google.api.client.util.Key
            private java.lang.String version;

            /**
             * Create a request for the method "countries.list".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @since 1.13
             */
            protected List()
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.CountryCollection.class );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getVersion()
            {
                return version;
            }

            public List setVersion( java.lang.String version )
            {
                this.version = version;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }

    /**
     * The "domains" collection of methods.
     */
    public class Domains
    {

        /**
         * Create a request for the method "domains.delete".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param name
         * @return the request
         */
        public Delete delete( java.lang.String loginId, java.lang.String name ) throws java.io.IOException
        {
            Delete result = new Delete( loginId, name );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "domains.get".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param name
         * @return the request
         */
        public Get get( java.lang.String loginId, java.lang.String name ) throws java.io.IOException
        {
            Get result = new Get( loginId, name );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "domains.insert".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @param content the {@link biz.turnonline.ecosystem.steward.model.Domain}
         * @return the request
         */
        public Insert insert( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.Domain content )
                throws java.io.IOException
        {
            Insert result = new Insert( loginId, content );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "domains.list".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param loginId
         * @return the request
         */
        public List list( java.lang.String loginId ) throws java.io.IOException
        {
            List result = new List( loginId );
            initialize( result );
            return result;
        }

        /**
         * An accessor for creating requests from the Uri collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code AccountSteward steward = new AccountSteward(...);}
         *   {@code AccountSteward.Uri.List request = steward.uri().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Uri uri()
        {
            return new Uri();
        }

        public class Delete
                extends AccountStewardRequest<Void>
        {

            private static final String REST_PATH = "accounts/{login_id}/domains/{name}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key
            private java.lang.String name;

            /**
             * Create a request for the method "domains.delete".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param name
             * @since 1.13
             */
            protected Delete( java.lang.String loginId, java.lang.String name )
            {
                super( AccountSteward.this, "DELETE", REST_PATH, null, Void.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                this.name = com.google.api.client.util.Preconditions.checkNotNull( name, "Required parameter name must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Delete setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.String getName()
            {
                return name;
            }

            public Delete setName( java.lang.String name )
            {
                this.name = name;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Domain>
        {

            private static final String REST_PATH = "accounts/{login_id}/domains/{name}";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key
            private java.lang.String name;

            /**
             * Create a request for the method "domains.get".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param name
             * @since 1.13
             */
            protected Get( java.lang.String loginId, java.lang.String name )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.Domain.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                this.name = com.google.api.client.util.Preconditions.checkNotNull( name, "Required parameter name must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Get setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.String getName()
            {
                return name;
            }

            public Get setName( java.lang.String name )
            {
                this.name = name;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class Insert
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.DomainCollection>
        {

            private static final String REST_PATH = "accounts/{login_id}/domains";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            /**
             * Create a request for the method "domains.insert".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
             * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @param content the {@link biz.turnonline.ecosystem.steward.model.Domain}
             * @since 1.13
             */
            protected Insert( java.lang.String loginId, biz.turnonline.ecosystem.steward.model.Domain content )
            {
                super( AccountSteward.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.steward.model.DomainCollection.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public Insert setAlt( java.lang.String alt )
            {
                return ( Insert ) super.setAlt( alt );
            }

            @Override
            public Insert setFields( java.lang.String fields )
            {
                return ( Insert ) super.setFields( fields );
            }

            @Override
            public Insert setKey( java.lang.String key )
            {
                return ( Insert ) super.setKey( key );
            }

            @Override
            public Insert setOauthToken( java.lang.String oauthToken )
            {
                return ( Insert ) super.setOauthToken( oauthToken );
            }

            @Override
            public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Insert ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Insert setQuotaUser( java.lang.String quotaUser )
            {
                return ( Insert ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Insert setUserIp( java.lang.String userIp )
            {
                return ( Insert ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public Insert setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            @Override
            public Insert set( String parameterName, Object value )
            {
                return ( Insert ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.DomainCollection>
        {

            private static final String REST_PATH = "accounts/{login_id}/domains";

            @com.google.api.client.util.Key( "login_id" )
            private java.lang.String loginId;

            @com.google.api.client.util.Key
            private java.lang.String type;

            @com.google.api.client.util.Key
            private java.lang.Integer limit;

            @com.google.api.client.util.Key
            private java.lang.Integer offset;

            /**
             * Create a request for the method "domains.list".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param loginId
             * @since 1.13
             */
            protected List( java.lang.String loginId )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.DomainCollection.class );
                this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getLoginId()
            {
                return loginId;
            }

            public List setLoginId( java.lang.String loginId )
            {
                this.loginId = loginId;
                return this;
            }

            /**
             *
             */
            public java.lang.String getType()
            {
                return type;
            }

            public List setType( java.lang.String type )
            {
                this.type = type;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLimit()
            {
                return limit;
            }

            public List setLimit( java.lang.Integer limit )
            {
                this.limit = limit;
                return this;
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getOffset()
            {
                return offset;
            }

            public List setOffset( java.lang.Integer offset )
            {
                this.offset = offset;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

        /**
         * The "uri" collection of methods.
         */
        public class Uri
        {

            /**
             * Create a request for the method "uri.insert".
             * <p>
             * This request holds the parameters needed by the steward server.  After setting any optional
             * parameters, call the {@link Insert#execute()} method to invoke the remote operation.
             *
             * @param loginId
             * @param hostname
             * @param content  the {@link biz.turnonline.ecosystem.steward.model.Uri}
             * @return the request
             */
            public Insert insert( java.lang.String loginId,
                                  java.lang.String hostname,
                                  biz.turnonline.ecosystem.steward.model.Uri content ) throws java.io.IOException
            {
                Insert result = new Insert( loginId, hostname, content );
                initialize( result );
                return result;
            }

            public class Insert
                    extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.Domain>
            {

                private static final String REST_PATH = "accounts/{login_id}/domains/{hostname}/uri";

                @com.google.api.client.util.Key( "login_id" )
                private java.lang.String loginId;

                @com.google.api.client.util.Key
                private java.lang.String hostname;

                /**
                 * Create a request for the method "uri.insert".
                 * <p>
                 * This request holds the parameters needed by the the steward server.  After setting any optional
                 * parameters, call the {@link Insert#execute()} method to invoke the remote operation. <p> {@link
                 * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
                 * be called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param loginId
                 * @param hostname
                 * @param content  the {@link biz.turnonline.ecosystem.steward.model.Uri}
                 * @since 1.13
                 */
                protected Insert( java.lang.String loginId,
                                  java.lang.String hostname,
                                  biz.turnonline.ecosystem.steward.model.Uri content )
                {
                    super( AccountSteward.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.steward.model.Domain.class );
                    this.loginId = com.google.api.client.util.Preconditions.checkNotNull( loginId, "Required parameter loginId must be specified." );
                    this.hostname = com.google.api.client.util.Preconditions.checkNotNull( hostname, "Required parameter hostname must be specified." );
                }

                @Override
                public Insert setAlt( java.lang.String alt )
                {
                    return ( Insert ) super.setAlt( alt );
                }

                @Override
                public Insert setFields( java.lang.String fields )
                {
                    return ( Insert ) super.setFields( fields );
                }

                @Override
                public Insert setKey( java.lang.String key )
                {
                    return ( Insert ) super.setKey( key );
                }

                @Override
                public Insert setOauthToken( java.lang.String oauthToken )
                {
                    return ( Insert ) super.setOauthToken( oauthToken );
                }

                @Override
                public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
                {
                    return ( Insert ) super.setPrettyPrint( prettyPrint );
                }

                @Override
                public Insert setQuotaUser( java.lang.String quotaUser )
                {
                    return ( Insert ) super.setQuotaUser( quotaUser );
                }

                @Override
                public Insert setUserIp( java.lang.String userIp )
                {
                    return ( Insert ) super.setUserIp( userIp );
                }

                /**
                 *
                 */
                public java.lang.String getLoginId()
                {
                    return loginId;
                }

                public Insert setLoginId( java.lang.String loginId )
                {
                    this.loginId = loginId;
                    return this;
                }

                /**
                 *
                 */
                public java.lang.String getHostname()
                {
                    return hostname;
                }

                public Insert setHostname( java.lang.String hostname )
                {
                    this.hostname = hostname;
                    return this;
                }

                @Override
                public Insert set( String parameterName, Object value )
                {
                    return ( Insert ) super.set( parameterName, value );
                }
            }

        }
    }

    /**
     * The "legalforms" collection of methods.
     */
    public class Legalforms
    {

        /**
         * Create a request for the method "legalforms.get".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param code
         * @return the request
         */
        public Get get( java.lang.String code ) throws java.io.IOException
        {
            Get result = new Get( code );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "legalforms.list".
         * <p>
         * This request holds the parameters needed by the steward server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @return the request
         */
        public List list() throws java.io.IOException
        {
            List result = new List();
            initialize( result );
            return result;
        }

        public class Get
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.LegalForm>
        {

            private static final String REST_PATH = "codebook/legalforms/{code}";

            @com.google.api.client.util.Key
            private java.lang.String code;

            @com.google.api.client.util.Key
            private java.lang.String version;

            /**
             * Create a request for the method "legalforms.get".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param code
             * @since 1.13
             */
            protected Get( java.lang.String code )
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.LegalForm.class );
                this.code = com.google.api.client.util.Preconditions.checkNotNull( code, "Required parameter code must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getCode()
            {
                return code;
            }

            public Get setCode( java.lang.String code )
            {
                this.code = code;
                return this;
            }

            /**
             *
             */
            public java.lang.String getVersion()
            {
                return version;
            }

            public Get setVersion( java.lang.String version )
            {
                this.version = version;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountStewardRequest<biz.turnonline.ecosystem.steward.model.LegalFormCollection>
        {

            private static final String REST_PATH = "codebook/legalforms";

            @com.google.api.client.util.Key
            private java.lang.String version;

            /**
             * Create a request for the method "legalforms.list".
             * <p>
             * This request holds the parameters needed by the the steward server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @since 1.13
             */
            protected List()
            {
                super( AccountSteward.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.steward.model.LegalFormCollection.class );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             *
             */
            public java.lang.String getVersion()
            {
                return version;
            }

            public List setVersion( java.lang.String version )
            {
                this.version = version;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

    }
}
