/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2017-11-07 19:12:12 UTC)
 * on 2017-12-13 at 06:22:00 UTC
 * Modify at your own risk.
 */

package biz.turnonline.ecosystem.accountManagement;

/**
 * Service definition for AccountManagement (v1).
 * <p>
 * <p>
 * TurnOnline.biz Ecosystem account & contact management REST API microservice
 * </p>
 * <p>
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 * <p>
 * <p>
 * This service uses {@link AccountManagementRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @author Google, Inc.
 * @since 1.3
 */
@SuppressWarnings( "javadoc" )
public class AccountManagement
        extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient
{

    /**
     * The default encoded root URL of the service. This is determined when the library is generated
     * and normally should not be changed.
     *
     * @since 1.7
     */
    public static final String DEFAULT_ROOT_URL = "https://account-mngmt-dot-turn-online-eu.appspot.com/_ah/api/";

    /**
     * The default encoded service path of the service. This is determined when the library is
     * generated and normally should not be changed.
     *
     * @since 1.7
     */
    public static final String DEFAULT_SERVICE_PATH = "accountManagement/v1/";

    /**
     * The default encoded batch path of the service. This is determined when the library is
     * generated and normally should not be changed.
     *
     * @since 1.23
     */
    public static final String DEFAULT_BATCH_PATH = "batch";

    /**
     * The default encoded base URL of the service. This is determined when the library is generated
     * and normally should not be changed.
     */
    public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

    // Note: Leave this static initializer at the top of the file.
    static
    {
        com.google.api.client.util.Preconditions.checkState(
                com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
                        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
                "You are currently running with version %s of google-api-client. " +
                        "You need at least version 1.15 of google-api-client to run version " +
                        "1.23.0 of the Account & Contact management library.", com.google.api.client.googleapis.GoogleUtils.VERSION );
    }

    /**
     * Constructor.
     * <p>
     * <p>
     * Use {@link Builder} if you need to specify any of the optional parameters.
     * </p>
     *
     * @param transport              HTTP transport, which should normally be:
     *                               <ul>
     *                               <li>Google App Engine:
     *                               {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *                               <li>Android: {@code newCompatibleTransport} from
     *                               {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *                               <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *                               </li>
     *                               </ul>
     * @param jsonFactory            JSON factory, which may be:
     *                               <ul>
     *                               <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *                               <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *                               <li>Android Honeycomb or higher:
     *                               {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *                               </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public AccountManagement( com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
                              com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
    {
        this( new Builder( transport, jsonFactory, httpRequestInitializer ) );
    }

    /**
     * @param builder builder
     */
    AccountManagement( Builder builder )
    {
        super( builder );
    }

    @Override
    protected void initialize( com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest )
            throws java.io.IOException
    {
        super.initialize( httpClientRequest );
    }

    /**
     * An accessor for creating requests from the Accounts collection.
     * <p>
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountManagement accountManagement = new AccountManagement(...);}
     *   {@code AccountManagement.Accounts.List request = accountManagement.accounts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Accounts accounts()
    {
        return new Accounts();
    }

    /**
     * An accessor for creating requests from the Contacts collection.
     * <p>
     * <p>The typical use is:</p>
     * <pre>
     *   {@code AccountManagement accountManagement = new AccountManagement(...);}
     *   {@code AccountManagement.Contacts.List request = accountManagement.contacts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Contacts contacts()
    {
        return new Contacts();
    }

    /**
     * Builder for {@link AccountManagement}.
     * <p>
     * <p>
     * Implementation is not thread-safe.
     * </p>
     *
     * @since 1.3.0
     */
    public static final class Builder
            extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder
    {

        /**
         * Returns an instance of a new builder.
         *
         * @param transport              HTTP transport, which should normally be:
         *                               <ul>
         *                               <li>Google App Engine:
         *                               {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
         *                               <li>Android: {@code newCompatibleTransport} from
         *                               {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
         *                               <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
         *                               </li>
         *                               </ul>
         * @param jsonFactory            JSON factory, which may be:
         *                               <ul>
         *                               <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
         *                               <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
         *                               <li>Android Honeycomb or higher:
         *                               {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
         *                               </ul>
         * @param httpRequestInitializer HTTP request initializer or {@code null} for none
         * @since 1.7
         */
        public Builder( com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
                        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
        {
            super(
                    transport,
                    jsonFactory,
                    DEFAULT_ROOT_URL,
                    DEFAULT_SERVICE_PATH,
                    httpRequestInitializer,
                    false );
            setBatchPath( DEFAULT_BATCH_PATH );
        }

        /**
         * Builds a new instance of {@link AccountManagement}.
         */
        @Override
        public AccountManagement build()
        {
            return new AccountManagement( this );
        }

        @Override
        public Builder setRootUrl( String rootUrl )
        {
            return ( Builder ) super.setRootUrl( rootUrl );
        }

        @Override
        public Builder setServicePath( String servicePath )
        {
            return ( Builder ) super.setServicePath( servicePath );
        }

        @Override
        public Builder setBatchPath( String batchPath )
        {
            return ( Builder ) super.setBatchPath( batchPath );
        }

        @Override
        public Builder setHttpRequestInitializer( com.google.api.client.http.HttpRequestInitializer httpRequestInitializer )
        {
            return ( Builder ) super.setHttpRequestInitializer( httpRequestInitializer );
        }

        @Override
        public Builder setApplicationName( String applicationName )
        {
            return ( Builder ) super.setApplicationName( applicationName );
        }

        @Override
        public Builder setSuppressPatternChecks( boolean suppressPatternChecks )
        {
            return ( Builder ) super.setSuppressPatternChecks( suppressPatternChecks );
        }

        @Override
        public Builder setSuppressRequiredParameterChecks( boolean suppressRequiredParameterChecks )
        {
            return ( Builder ) super.setSuppressRequiredParameterChecks( suppressRequiredParameterChecks );
        }

        @Override
        public Builder setSuppressAllChecks( boolean suppressAllChecks )
        {
            return ( Builder ) super.setSuppressAllChecks( suppressAllChecks );
        }

        /**
         * Set the {@link AccountManagementRequestInitializer}.
         *
         * @since 1.12
         */
        public Builder setAccountManagementRequestInitializer(
                AccountManagementRequestInitializer accountmanagementRequestInitializer )
        {
            return ( Builder ) super.setGoogleClientRequestInitializer( accountmanagementRequestInitializer );
        }

        @Override
        public Builder setGoogleClientRequestInitializer(
                com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer )
        {
            return ( Builder ) super.setGoogleClientRequestInitializer( googleClientRequestInitializer );
        }
    }

    /**
     * The "accounts" collection of methods.
     */
    public class Accounts
    {

        /**
         * Create a request for the method "accounts.delete".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param accountId
         * @return the request
         */
        public Delete delete( java.lang.Long accountId ) throws java.io.IOException
        {
            Delete result = new Delete( accountId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.get".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param accountId
         * @return the request
         */
        public Get get( java.lang.Long accountId ) throws java.io.IOException
        {
            Get result = new Get( accountId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.insert".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param content the {@link biz.turnonline.ecosystem.accountManagement.model.Account}
         * @return the request
         */
        public Insert insert( biz.turnonline.ecosystem.accountManagement.model.Account content )
                throws java.io.IOException
        {
            Insert result = new Insert( content );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.list".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @return the request
         */
        public List list() throws java.io.IOException
        {
            List result = new List();
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "accounts.update".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param accountId
         * @param content   the {@link biz.turnonline.ecosystem.accountManagement.model.Account}
         * @return the request
         */
        public Update update( java.lang.Long accountId, biz.turnonline.ecosystem.accountManagement.model.Account content )
                throws java.io.IOException
        {
            Update result = new Update( accountId, content );
            initialize( result );
            return result;
        }

        public class Delete
                extends AccountManagementRequest<Void>
        {

            private static final String REST_PATH = "accounts/{accountId}";

            @com.google.api.client.util.Key
            private java.lang.Long accountId;

            /**
             * Create a request for the method "accounts.delete".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param accountId
             * @since 1.13
             */
            protected Delete( java.lang.Long accountId )
            {
                super( AccountManagement.this, "DELETE", REST_PATH, null, Void.class );
                this.accountId = com.google.api.client.util.Preconditions.checkNotNull( accountId, "Required parameter accountId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**

             */
            public java.lang.Long getAccountId()
            {
                return accountId;
            }

            public Delete setAccountId( java.lang.Long accountId )
            {
                this.accountId = accountId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.Account>
        {

            private static final String REST_PATH = "accounts/{accountId}";

            @com.google.api.client.util.Key
            private java.lang.Long accountId;

            /**
             * Create a request for the method "accounts.get".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param accountId
             * @since 1.13
             */
            protected Get( java.lang.Long accountId )
            {
                super( AccountManagement.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.accountManagement.model.Account.class );
                this.accountId = com.google.api.client.util.Preconditions.checkNotNull( accountId, "Required parameter accountId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**

             */
            public java.lang.Long getAccountId()
            {
                return accountId;
            }

            public Get setAccountId( java.lang.Long accountId )
            {
                this.accountId = accountId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class Insert
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.Account>
        {

            private static final String REST_PATH = "accounts";

            /**
             * Create a request for the method "accounts.insert".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Insert#execute()} method to invoke the remote
             * operation. <p> {@link
             * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param content the {@link biz.turnonline.ecosystem.accountManagement.model.Account}
             * @since 1.13
             */
            protected Insert( biz.turnonline.ecosystem.accountManagement.model.Account content )
            {
                super( AccountManagement.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.accountManagement.model.Account.class );
            }

            @Override
            public Insert setAlt( java.lang.String alt )
            {
                return ( Insert ) super.setAlt( alt );
            }

            @Override
            public Insert setFields( java.lang.String fields )
            {
                return ( Insert ) super.setFields( fields );
            }

            @Override
            public Insert setKey( java.lang.String key )
            {
                return ( Insert ) super.setKey( key );
            }

            @Override
            public Insert setOauthToken( java.lang.String oauthToken )
            {
                return ( Insert ) super.setOauthToken( oauthToken );
            }

            @Override
            public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Insert ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Insert setQuotaUser( java.lang.String quotaUser )
            {
                return ( Insert ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Insert setUserIp( java.lang.String userIp )
            {
                return ( Insert ) super.setUserIp( userIp );
            }

            @Override
            public Insert set( String parameterName, Object value )
            {
                return ( Insert ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.AccountCollection>
        {

            private static final String REST_PATH = "accounts";

            @com.google.api.client.util.Key
            private java.lang.Integer start;

            @com.google.api.client.util.Key
            private java.lang.Integer length;

            @com.google.api.client.util.Key
            private java.lang.Boolean company;

            /**
             * Create a request for the method "accounts.list".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @since 1.13
             */
            protected List()
            {
                super( AccountManagement.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.accountManagement.model.AccountCollection.class );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getStart()
            {
                return start;
            }

            public List setStart( java.lang.Integer start )
            {
                this.start = start;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLength()
            {
                return length;
            }

            public List setLength( java.lang.Integer length )
            {
                this.length = length;
                return this;
            }

            /**

             */
            public java.lang.Boolean getCompany()
            {
                return company;
            }

            public List setCompany( java.lang.Boolean company )
            {
                this.company = company;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

        public class Update
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.Account>
        {

            private static final String REST_PATH = "accounts/{accountId}";

            @com.google.api.client.util.Key
            private java.lang.Long accountId;

            /**
             * Create a request for the method "accounts.update".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Update#execute()} method to invoke the remote
             * operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param accountId
             * @param content   the {@link biz.turnonline.ecosystem.accountManagement.model.Account}
             * @since 1.13
             */
            protected Update( java.lang.Long accountId, biz.turnonline.ecosystem.accountManagement.model.Account content )
            {
                super( AccountManagement.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.accountManagement.model.Account.class );
                this.accountId = com.google.api.client.util.Preconditions.checkNotNull( accountId, "Required parameter accountId must be specified." );
            }

            @Override
            public Update setAlt( java.lang.String alt )
            {
                return ( Update ) super.setAlt( alt );
            }

            @Override
            public Update setFields( java.lang.String fields )
            {
                return ( Update ) super.setFields( fields );
            }

            @Override
            public Update setKey( java.lang.String key )
            {
                return ( Update ) super.setKey( key );
            }

            @Override
            public Update setOauthToken( java.lang.String oauthToken )
            {
                return ( Update ) super.setOauthToken( oauthToken );
            }

            @Override
            public Update setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Update ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Update setQuotaUser( java.lang.String quotaUser )
            {
                return ( Update ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Update setUserIp( java.lang.String userIp )
            {
                return ( Update ) super.setUserIp( userIp );
            }

            /**

             */
            public java.lang.Long getAccountId()
            {
                return accountId;
            }

            public Update setAccountId( java.lang.Long accountId )
            {
                this.accountId = accountId;
                return this;
            }

            @Override
            public Update set( String parameterName, Object value )
            {
                return ( Update ) super.set( parameterName, value );
            }
        }

    }

    /**
     * The "contacts" collection of methods.
     */
    public class Contacts
    {

        /**
         * Create a request for the method "contacts.delete".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param contactId
         * @return the request
         */
        public Delete delete( java.lang.Long contactId ) throws java.io.IOException
        {
            Delete result = new Delete( contactId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.get".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param contactId
         * @return the request
         */
        public Get get( java.lang.Long contactId ) throws java.io.IOException
        {
            Get result = new Get( contactId );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.insert".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
         *
         * @param content the {@link biz.turnonline.ecosystem.accountManagement.model.ContactCard}
         * @return the request
         */
        public Insert insert( biz.turnonline.ecosystem.accountManagement.model.ContactCard content )
                throws java.io.IOException
        {
            Insert result = new Insert( content );
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.list".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @return the request
         */
        public List list() throws java.io.IOException
        {
            List result = new List();
            initialize( result );
            return result;
        }

        /**
         * Create a request for the method "contacts.update".
         * <p>
         * This request holds the parameters needed by the accountManagement server.  After setting any
         * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param contactId
         * @param content   the {@link biz.turnonline.ecosystem.accountManagement.model.ContactCard}
         * @return the request
         */
        public Update update( java.lang.Long contactId, biz.turnonline.ecosystem.accountManagement.model.ContactCard content )
                throws java.io.IOException
        {
            Update result = new Update( contactId, content );
            initialize( result );
            return result;
        }

        public class Delete
                extends AccountManagementRequest<Void>
        {

            private static final String REST_PATH = "accounts/contacts/{contactId}";

            @com.google.api.client.util.Key
            private java.lang.Long contactId;

            /**
             * Create a request for the method "contacts.delete".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Delete#execute()} method to invoke the remote
             * operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param contactId
             * @since 1.13
             */
            protected Delete( java.lang.Long contactId )
            {
                super( AccountManagement.this, "DELETE", REST_PATH, null, Void.class );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public Delete setAlt( java.lang.String alt )
            {
                return ( Delete ) super.setAlt( alt );
            }

            @Override
            public Delete setFields( java.lang.String fields )
            {
                return ( Delete ) super.setFields( fields );
            }

            @Override
            public Delete setKey( java.lang.String key )
            {
                return ( Delete ) super.setKey( key );
            }

            @Override
            public Delete setOauthToken( java.lang.String oauthToken )
            {
                return ( Delete ) super.setOauthToken( oauthToken );
            }

            @Override
            public Delete setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Delete ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Delete setQuotaUser( java.lang.String quotaUser )
            {
                return ( Delete ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Delete setUserIp( java.lang.String userIp )
            {
                return ( Delete ) super.setUserIp( userIp );
            }

            /**

             */
            public java.lang.Long getContactId()
            {
                return contactId;
            }

            public Delete setContactId( java.lang.Long contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Delete set( String parameterName, Object value )
            {
                return ( Delete ) super.set( parameterName, value );
            }
        }

        public class Get
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.ContactCard>
        {

            private static final String REST_PATH = "accounts/contacts/{contactId}";

            @com.google.api.client.util.Key
            private java.lang.Long contactId;

            /**
             * Create a request for the method "contacts.get".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
             * <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param contactId
             * @since 1.13
             */
            protected Get( java.lang.Long contactId )
            {
                super( AccountManagement.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.accountManagement.model.ContactCard.class );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get setAlt( java.lang.String alt )
            {
                return ( Get ) super.setAlt( alt );
            }

            @Override
            public Get setFields( java.lang.String fields )
            {
                return ( Get ) super.setFields( fields );
            }

            @Override
            public Get setKey( java.lang.String key )
            {
                return ( Get ) super.setKey( key );
            }

            @Override
            public Get setOauthToken( java.lang.String oauthToken )
            {
                return ( Get ) super.setOauthToken( oauthToken );
            }

            @Override
            public Get setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Get ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Get setQuotaUser( java.lang.String quotaUser )
            {
                return ( Get ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Get setUserIp( java.lang.String userIp )
            {
                return ( Get ) super.setUserIp( userIp );
            }

            /**

             */
            public java.lang.Long getContactId()
            {
                return contactId;
            }

            public Get setContactId( java.lang.Long contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Get set( String parameterName, Object value )
            {
                return ( Get ) super.set( parameterName, value );
            }
        }

        public class Insert
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.ContactCard>
        {

            private static final String REST_PATH = "accounts/contacts";

            /**
             * Create a request for the method "contacts.insert".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Insert#execute()} method to invoke the remote
             * operation. <p> {@link
             * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param content the {@link biz.turnonline.ecosystem.accountManagement.model.ContactCard}
             * @since 1.13
             */
            protected Insert( biz.turnonline.ecosystem.accountManagement.model.ContactCard content )
            {
                super( AccountManagement.this, "POST", REST_PATH, content, biz.turnonline.ecosystem.accountManagement.model.ContactCard.class );
            }

            @Override
            public Insert setAlt( java.lang.String alt )
            {
                return ( Insert ) super.setAlt( alt );
            }

            @Override
            public Insert setFields( java.lang.String fields )
            {
                return ( Insert ) super.setFields( fields );
            }

            @Override
            public Insert setKey( java.lang.String key )
            {
                return ( Insert ) super.setKey( key );
            }

            @Override
            public Insert setOauthToken( java.lang.String oauthToken )
            {
                return ( Insert ) super.setOauthToken( oauthToken );
            }

            @Override
            public Insert setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Insert ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Insert setQuotaUser( java.lang.String quotaUser )
            {
                return ( Insert ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Insert setUserIp( java.lang.String userIp )
            {
                return ( Insert ) super.setUserIp( userIp );
            }

            @Override
            public Insert set( String parameterName, Object value )
            {
                return ( Insert ) super.set( parameterName, value );
            }
        }

        public class List
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.ContactCardCollection>
        {

            private static final String REST_PATH = "accounts/contacts";

            @com.google.api.client.util.Key
            private java.lang.Integer start;

            @com.google.api.client.util.Key
            private java.lang.Integer length;

            @com.google.api.client.util.Key
            private java.lang.Boolean company;

            /**
             * Create a request for the method "contacts.list".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link List#execute()} method to invoke the remote operation.
             * <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @since 1.13
             */
            protected List()
            {
                super( AccountManagement.this, "GET", REST_PATH, null, biz.turnonline.ecosystem.accountManagement.model.ContactCardCollection.class );
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException
            {
                return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException
            {
                return super.buildHttpRequestUsingHead();
            }

            @Override
            public List setAlt( java.lang.String alt )
            {
                return ( List ) super.setAlt( alt );
            }

            @Override
            public List setFields( java.lang.String fields )
            {
                return ( List ) super.setFields( fields );
            }

            @Override
            public List setKey( java.lang.String key )
            {
                return ( List ) super.setKey( key );
            }

            @Override
            public List setOauthToken( java.lang.String oauthToken )
            {
                return ( List ) super.setOauthToken( oauthToken );
            }

            @Override
            public List setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( List ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public List setQuotaUser( java.lang.String quotaUser )
            {
                return ( List ) super.setQuotaUser( quotaUser );
            }

            @Override
            public List setUserIp( java.lang.String userIp )
            {
                return ( List ) super.setUserIp( userIp );
            }

            /**
             * [ default: 0]
             * [
             */
            public java.lang.Integer getStart()
            {
                return start;
            }

            public List setStart( java.lang.Integer start )
            {
                this.start = start;
                return this;
            }

            /**
             * [ default: 10]
             * [
             */
            public java.lang.Integer getLength()
            {
                return length;
            }

            public List setLength( java.lang.Integer length )
            {
                this.length = length;
                return this;
            }

            /**

             */
            public java.lang.Boolean getCompany()
            {
                return company;
            }

            public List setCompany( java.lang.Boolean company )
            {
                this.company = company;
                return this;
            }

            @Override
            public List set( String parameterName, Object value )
            {
                return ( List ) super.set( parameterName, value );
            }
        }

        public class Update
                extends AccountManagementRequest<biz.turnonline.ecosystem.accountManagement.model.ContactCard>
        {

            private static final String REST_PATH = "accounts/contacts/{contactId}";

            @com.google.api.client.util.Key
            private java.lang.Long contactId;

            /**
             * Create a request for the method "contacts.update".
             * <p>
             * This request holds the parameters needed by the the accountManagement server.  After setting
             * any optional parameters, call the {@link Update#execute()} method to invoke the remote
             * operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param contactId
             * @param content   the {@link biz.turnonline.ecosystem.accountManagement.model.ContactCard}
             * @since 1.13
             */
            protected Update( java.lang.Long contactId, biz.turnonline.ecosystem.accountManagement.model.ContactCard content )
            {
                super( AccountManagement.this, "PUT", REST_PATH, content, biz.turnonline.ecosystem.accountManagement.model.ContactCard.class );
                this.contactId = com.google.api.client.util.Preconditions.checkNotNull( contactId, "Required parameter contactId must be specified." );
            }

            @Override
            public Update setAlt( java.lang.String alt )
            {
                return ( Update ) super.setAlt( alt );
            }

            @Override
            public Update setFields( java.lang.String fields )
            {
                return ( Update ) super.setFields( fields );
            }

            @Override
            public Update setKey( java.lang.String key )
            {
                return ( Update ) super.setKey( key );
            }

            @Override
            public Update setOauthToken( java.lang.String oauthToken )
            {
                return ( Update ) super.setOauthToken( oauthToken );
            }

            @Override
            public Update setPrettyPrint( java.lang.Boolean prettyPrint )
            {
                return ( Update ) super.setPrettyPrint( prettyPrint );
            }

            @Override
            public Update setQuotaUser( java.lang.String quotaUser )
            {
                return ( Update ) super.setQuotaUser( quotaUser );
            }

            @Override
            public Update setUserIp( java.lang.String userIp )
            {
                return ( Update ) super.setUserIp( userIp );
            }

            /**

             */
            public java.lang.Long getContactId()
            {
                return contactId;
            }

            public Update setContactId( java.lang.Long contactId )
            {
                this.contactId = contactId;
                return this;
            }

            @Override
            public Update set( String parameterName, Object value )
            {
                return ( Update ) super.set( parameterName, value );
            }
        }

    }
}
